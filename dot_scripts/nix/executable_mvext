#!/usr/bin/env bash
set -euo pipefail

readonly CMD_NAME="$(basename "$0")"
readonly HELP_MSG="$(cat <<EOF
Usage: ${CMD_NAME} [(-d | --dry-run)] pattern extension

Change extensions of all files matching a pattern. If --dry-run is specified, no actual
renaming will happen and the script will print out the commands it would execute.

Below example would rename extensions of all matching files in the current directory to
*.json (wildcard stands for individual names of matched files):

    ${CMD_NAME} '*.txt' json

NOTE: You need to quote a wildcard character to prevent your shell from expanding it
      prematurely. Always quote the first argument if in doubt.
EOF
)"

function main {
    if test "$#" -lt 2; then
        echo "${HELP_MSG}"
        exit 1
    fi

    local dry_run
    dry_run=false

    if test "$1" = '-d' || test "$1" = '--dry-run'; then
        dry_run=true
        shift
    fi

    local pattern
    local extension

    pattern="$1"
    extension="$2"

    local count
    count=0

    local fpath
    while IFS=$'\n' read -r fpath; do
        local new_fpath
        new_fpath="${fpath%.*}.${extension}"

        if test "${dry_run}" = 'false'; then
            mv "${fpath}" "${new_fpath}"
        else
            printf "[dry-run] %-40s ---> %40s\n" "${fpath}" "${new_fpath}"
        fi

        count=$((count+1))
    done < <(find . -mindepth 1 -maxdepth 1 -type f -name "${pattern}")

    if test "${count}" -eq 0; then
        echo "Error: No file matched a given pattern: ${pattern}"
        exit 0
    fi
}

main "$@"
