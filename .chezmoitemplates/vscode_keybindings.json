[
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // This is modeled to resemble my workflow on Arch Linux as close as possible (i3wm + alacritty + neovim).
    // See original configuration for more context:
    // - https://github.com/ddnomad/dotfiles/blob/master/dot_config/i3/config.tmpl
    // - https://github.com/ddnomad/dotfiles/blob/master/dot_config/alacritty/alacritty.yml.tmpl
    // - https://github.com/ddnomad/dotfiles/blob/master/dot_config/nvim/init.vim.tmpl
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Opening things
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    { "key": "{{ .vscode.mod1 }}+d", "command": "workbench.action.showCommands"},
    { "key": "{{ .vscode.mod1 }}+enter", "command": "workbench.action.terminal.toggleTerminal" },
    { "key": "{{ .vscode.mod1 }}+enter", "command": "workbench.action.terminal.split", "when": "terminalFocus" },
    { "key": "{{ .vscode.mod1 }}+shift+enter", "command": "workbench.action.terminal.new", "when": "terminalFocus" },

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Closing things
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    { "key": "ctrl+q", "command": "workbench.action.closeActiveEditor"},
    { "key": "ctrl+q", "command": "workbench.action.terminal.kill", "when": "terminalFocus" },

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Toggling things
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    { "key": "tab", "command": "workbench.action.toggleSidebarVisibility", "when": "vim.mode == 'Normal'"},

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Navigating between things
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Navigate between root level UI elements (tab groups, terminal window, explorer etc.)
    // "${DEITY}" bless this person: https://stackoverflow.com/a/50593160/3272592
    { "key": "{{ .vscode.mod1 }}+h", "command": "workbench.action.navigateLeft" },
    { "key": "{{ .vscode.mod1 }}+l", "command": "workbench.action.navigateRight" },
    { "key": "{{ .vscode.mod1 }}+k", "command": "workbench.action.navigateUp" },
    { "key": "{{ .vscode.mod1 }}+j", "command": "workbench.action.navigateDown" },

    // Fix for a default action being "Rename File" on MacOS when pressing Enter on a selected file when navigating Explorer pane
    {{ if eq .chezmoi.os "darwin" }}
    { "key": "enter", "command": "-renameFile", "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
    {{ end }}

    // TODO: Shortcut for renaming files in the Explorer (was a default when pressing Enter on MacOS)

    // Navigate between integrated terminal splits in the same way as between root UI elements
    // FIXME: Does not work on MacOS
    { "key": "{{ .vscode.mod1 }}+j", "command": "workbench.action.terminal.focusNextPane", "when": "terminalFocus && panelPosition == 'right'"},
    { "key": "{{ .vscode.mod1 }}+k", "command": "workbench.action.terminal.focusPreviousPane", "when": "terminalFocus && panelPosition == 'right'"},
    { "key": "{{ .vscode.mod1 }}+l", "command": "workbench.action.terminal.focusNextPane", "when": "terminalFocus && panelPosition == 'bottom'"},
    { "key": "{{ .vscode.mod1 }}+h", "command": "workbench.action.terminal.focusPreviousPane", "when": "terminalFocus && panelPosition == 'bottom'"},

    // Move between explorer and outline in the same way as between root UI elements
    { "key": "{{ .vscode.mod1 }}+j", "command": "outline.focus", "when": "sideBarFocus && activeViewlet == 'workbench.view.explorer'" },
    { "key": "{{ .vscode.mod1 }}+k", "command": "workbench.explorer.fileView.focus", "when": "sideBarFocus && outline.active" },

    // Cycle between editors (tabs) in a single tab group
    { "key": "ctrl+j", "command": "workbench.action.nextEditor" },
    { "key": "ctrl+k", "command": "workbench.action.previousEditor", },

    // Cycle between sidebar panes
    { "key": "{{ .vscode.mod1 }}+1", "command": "workbench.view.explorer", "when": "sideBarFocus" },
    { "key": "{{ .vscode.mod1 }}+2", "command": "workbench.view.search.focus", "when": "sideBarFocus" },
    { "key": "{{ .vscode.mod1 }}+3", "command": "workbench.view.scm", "when": "sideBarFocus" },
    { "key": "{{ .vscode.mod1 }}+4", "command": "workbench.view.debug", "when": "sideBarFocus" },
    { "key": "{{ .vscode.mod1 }}+5", "command": "sshHosts.focus", "when": "sideBarFocus" },
    { "key": "{{ .vscode.mod1 }}+6", "command": "workbench.view.extensions", "when": "sideBarFocus" },
    { "key": "{{ .vscode.mod1 }}+7", "command": "workbench.view.extension.test", "when": "sideBarFocus" },
    { "key": "{{ .vscode.mod1 }}+8", "command": "", "when": "sideBarFocus" },
    { "key": "{{ .vscode.mod1 }}+9", "command": "", "when": "sideBarFocus" },

    // Cycle between terminal tabs
    { "key": "ctrl+j", "command": "workbench.action.terminal.focusNext", "when": "terminalFocus" },
    { "key": "ctrl+k", "command": "workbench.action.terminal.focusPrevious", "when": "terminalFocus" },

    // FIXME: Instead use to switch between problems / output etc.
    // FIXME: Does not work on MacOS
    // Switching between problems, output, terminal etc. tabs
    { "key": "{{ .vscode.mod1 }}+1", "command": "workbench.action.problems.focus", "when": "activePanel == 'workbench.panel.markers' || activePanel == 'workbench.panel.output' || activePanel == 'workbench.panel.repl' || activePanel == '~remote.forwardedPortsContainer' || terminalFocus" },
    { "key": "{{ .vscode.mod1 }}+2", "command": "workbench.panel.output.focus", "when": "activePanel == 'workbench.panel.markers' || activePanel == 'workbench.panel.output' || activePanel == 'workbench.panel.repl' || activePanel == '~remote.forwardedPortsContainer' || terminalFocus" },
    { "key": "{{ .vscode.mod1 }}+3", "command": "workbench.action.terminal.focus", "when": "activePanel == 'workbench.panel.markers' || activePanel == 'workbench.panel.output' || activePanel == 'workbench.panel.repl' || activePanel == '~remote.forwardedPortsContainer' || terminalFocus" },
    { "key": "{{ .vscode.mod1 }}+4", "command": "~remote.forwardedPorts.focus", "when": "activePanel == 'workbench.panel.markers' || activePanel == 'workbench.panel.output' || activePanel == 'workbench.panel.repl' || activePanel == '~remote.forwardedPortsContainer' || terminalFocus" },
    { "key": "{{ .vscode.mod1 }}+5", "command": "workbench.panel.repl.view.focus", "when": "activePanel == 'workbench.panel.markers' || activePanel == 'workbench.panel.output' || activePanel == 'workbench.panel.repl' || activePanel == '~remote.forwardedPortsContainer' || terminalFocus" },
    { "key": "{{ .vscode.mod1 }}+6", "command": "", "when": "activePanel == 'workbench.panel.markers' || activePanel == 'workbench.panel.output' || activePanel == 'workbench.panel.repl' || activePanel == '~remote.forwardedPortsContainer' || terminalFocus" },
    { "key": "{{ .vscode.mod1 }}+7", "command": "", "when": "activePanel == 'workbench.panel.markers' || activePanel == 'workbench.panel.output' || activePanel == 'workbench.panel.repl' || activePanel == '~remote.forwardedPortsContainer' || terminalFocus" },
    { "key": "{{ .vscode.mod1 }}+8", "command": "", "when": "activePanel == 'workbench.panel.markers' || activePanel == 'workbench.panel.output' || activePanel == 'workbench.panel.repl' || activePanel == '~remote.forwardedPortsContainer' || terminalFocus" },
    { "key": "{{ .vscode.mod1 }}+9", "command": "", "when": "activePanel == 'workbench.panel.markers' || activePanel == 'workbench.panel.output' || activePanel == 'workbench.panel.repl' || activePanel == '~remote.forwardedPortsContainer' || terminalFocus" },

    // Navigation between items in command palette
    { "key": "ctrl+j", "command": "workbench.action.quickOpenSelectNext", "when": "inQuickOpen" },
    { "key": "ctrl+k", "command": "workbench.action.quickOpenSelectPrevious", "when": "inQuickOpen" },

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Moving things around
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    { "key": "{{ .vscode.mod1 }}+shift+h", "command": "workbench.action.moveEditorToPreviousGroup", "when": "editorFocus"},
    { "key": "{{ .vscode.mod1 }}+shift+j", "command": "workbench.action.moveEditorRightInGroup", "when": "editorFocus"},
    { "key": "{{ .vscode.mod1 }}+shift+k", "command": "workbench.action.moveEditorLeftInGroup", "when": "editorFocus"},
    { "key": "{{ .vscode.mod1 }}+shift+l", "command": "workbench.action.moveEditorToNextGroup", "when": "editorFocus"},

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Resizing things
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    { "key": "{{ .vscode.mod1 }}+ctrl+h", "command": "workbench.action.decreaseViewSize" },
    { "key": "{{ .vscode.mod1 }}+ctrl+l", "command": "workbench.action.increaseViewSize" },
]
